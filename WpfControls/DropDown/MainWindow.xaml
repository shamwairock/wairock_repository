<Window x:Class="DropDown.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DropDown"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525">
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}"
                  BorderBrush="{TemplateBinding Border.BorderBrush}"
                  Background="{TemplateBinding Panel.Background}"
                  Name="Bd"
                  SnapsToDevicePixels="True">
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                               ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                               ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                               HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                               VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                               SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="Selector.IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Panel.Background" TargetName="Bd" 
                        Value="Transparent"/>
                                    <Setter Property="Border.BorderBrush" TargetName="Bd">
                                        <Setter.Value>
                                            <SolidColorBrush>#FFDADADA</SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="Selector.IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Panel.Background" TargetName="Bd" Value="Transparent"/>
                                    <Setter Property="Border.BorderBrush" TargetName="Bd">
                                        <Setter.Value>
                                            <SolidColorBrush>#FF26A0DA</SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                    <Setter Property="Panel.Background" TargetName="Bd" 
                       Value="LightSteelBlue"/>
                                    <Setter Property="Border.BorderBrush" TargetName="Bd">
                                        <Setter.Value>
                                            <SolidColorBrush>#A826A0DA</SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd">
                                        <Setter.Value>
                                            <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Canvas Margin="0,0,172,184">
            <Button Name="Button1" Width="100"  Canvas.Left="46" Canvas.Top="35" Click="Button1_Click">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Rotate"/>
                        <Path x:Name="BtnArrow" Margin="4" VerticalAlignment="Center" Width="6" Fill="#FF527DB5" Stretch="Uniform" HorizontalAlignment="Right" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "/>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Popup Name="popup1" PlacementTarget="{Binding ElementName=Button1}" PopupAnimation="Slide" AllowsTransparency="True" >
                <ListBox Name="list1" Width="{Binding ElementName=Button1, Path=ActualWidth}">
                    <ListBoxItem>
                        <TextBlock>Item1</TextBlock>
                    </ListBoxItem>
                    <ListBoxItem>Item2</ListBoxItem>
                    <ListBoxItem>Item3</ListBoxItem>
                    <ListBoxItem>Item4</ListBoxItem>
                </ListBox>
            </Popup>
        </Canvas>
        <ListView Margin="0,206,0,0">
            <ListViewItem>
                <TextBlock>Item1</TextBlock>
            </ListViewItem>
            <ListViewItem>Item2</ListViewItem>
            <ListViewItem>Item3</ListViewItem>
            <ListViewItem>Item4</ListViewItem>
        </ListView>
    </Grid>
</Window>
